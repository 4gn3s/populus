0.5.4
-----

- Additional support for *library* contracts which will be included in
  compilation.
- `deployed_contracts` automatically derives deployment order and dependencies
  as well as linking library addresses.
- `deployed_contracts` now comes with the transaction receipts for the
  deploying transaction attached.
- Change to use `pyethash` from pypi


0.5.3
-----

- New `populus attach` command for launching interactive python repl with
  contracts and rpc client loaded into local scope.
- Support for auto-linking of library contracts for the `deployed_contracts`
  testing fixture.


0.5.2
-----

- Rename `rpc_server` fixture to `testrpc_server`
- Introduce `populus_config` module level fixture which holds all of the
  default values for other populus module level fixtures that are configurable.
- Add new configuration options for `deployed_contracts` fixture to allow
  declaration of which contracts are deployed, dependency ordering and
  constructor args.
- Improve overall documentation around fixtures.

0.5.1
-----

- Introduce the `ethtester_client` which has the same API as the
  eth_rpc_client.Client class but interacts directly with the `ethereum.tester`
  module
- Add ability to control the manner through which the `deployed_contracts`
  fixture communicates with the blockchain via the `deploy_client` fixture.
- Re-organization of the contracts module.
- Support for multiple contract functions with the same name.
- Basic support for extracting logs and log data from transactions.

0.5.0
-----

- Significant refactor to the `Contract` and related `Function` and `Event`
  objects used to interact with contracts.
- Major improvements to robustness of `geth_node` fixture.
- `deployed_contracts` testing fixture no longer provides it's own rpc server.
  Now you must either provide you own, or use the `geth_node` or `rpc_server`
  alongside it in tests.
- `geth_node` fixture now writes to a logfile located in
  `./chains/<chain-name>/logs/` for both cli and test case runs.

0.4.3
-----

- Add support for address function args with a 0x prefix.

0.4.2
-----

- Add `init` command for initializing a populus project.

0.4.1
-----

- Missing `index.html` file.

0.4.0
-----

- Add blockchain management via `populus chain` commands which wraps `geth`
  library.
    - `populus chain run <name>` for running the chain
    - `populus chain reset <name>` for resetting a chain
- Add html/css/js development support.
    - Development webserver via `populus web runserver`
    - Conversion of compiled contracts to web3 contract objects in javascript.

0.3.7
-----

- Add support for decoding multiple values from a solidity function call.

0.3.6
-----

- Add support for decoding `address` return types from contract functions.

0.3.5
-----

- Add support for contract constructors which take arguments via the new
  `constructor_args` parameter to the `Contract.deploy` method.

0.3.4
-----

- Fix bug where null bytes were excluded from the returned bytes.

0.3.3
-----

- Fix a bug in the `sendTransaction` methods for contract functions that did
  not pass along most of the `**kwargs`.
- Add new `Contract.get_balance()` method to contracts.

0.3.2
-----

- Enable decoding of `bytes` types returned by contract function calls.

0.3.1
-----

- Enable decoding of `boolean` values returned by contract function calls.

0.3.0
-----

- Removed `watch` command in favor of passing `--watch` into the `compile`
  command.
- Add granular control to the `compile` command so that you can specify
  specific files, contract names, or a combination of the two.

0.2.0
-----

- Update to `pypi` version of `eth-testrpc`
- Add new watch command which observes the project contracts and recompiles
  them when they change.
- Improved shell output for compile command.
- Re-organized portions of the `utils` module into a new `compilation` module.

0.1.4
-----

- Fix broken import in `cli` module.

0.1.3
-----

- Remove the local RPC client in favor of using
  https://github.com/pipermerriam/ethereum-rpc-client

0.1.2
-----

- Add missing pytest dependency.

0.1.1
-----

- Fix bug when deploying contracts onto a real blockchain.

0.1.0
-----

- Project Creation
